「kanjips」は、漢字を含むPostScriptプログラムを、ホスト上でのフォントの
展開によって漢字フォントを使わないPostScriptに変換するためのフィルタです。

●起動法

	% kanjips [ filename ]

●使用例(mailの印刷)

	% show | jenscript -2 | kanjips | lpr -Plw

●フォント種

	kanjipsでは以下のフォントが使用できます。

		○ JTeXの漢字フォント(pxl/pk)
		○ GMWのフォント
		○ Xのbdfフォント
		○ SHARP OAUXの/ext/knj/ptrn**の漢字フォント
		○ SHARP製アウトラインフォント
		○ ベタ形式のドットフォント
	
	Hersheyフォントはあまり美しくないので入っていません。

●フォントのローディング

	漢字フォントは、PostScriptプログラム中に

		%%DocumentFonts: jis16 jis24

	というような行を入れておくと、その後に漢字文字列が来たときダイナ
	ミックにロードされます。漢字の定義は"def"で行なうため、あまり
	たくさん漢字を使うとVMがあふれてしまいます。

	漢字フォントデータは文字が最初に現れた文字列の直前で定義します。
	例えば、

		(漢字) show
		........
		(漢字) show

	のようなプログラムは

		<漢データ> def
		<字データ> def
		(漢字) show
		........
		(漢字) show

	というように変換されます。一度定義したフォントデータは再定義しません。
	このため、文字列の前後をsave,restoreで囲むと変換後のプログラムは

		save
		<漢データ> def
		<字データ> def
		(漢字) show
		restore
		........
		(漢字) show

	のようになってしまい２度目の漢字データが未定義になってしまうため
	注意が必要です。

	通常ページ毎にVMのsave,restoreを行ないますが、このとき上と同じ問題が
	発生するため、

		%%Page:

	で始まる行が来るとkanjips側で定義した漢字を忘れるようになっています。
	この後出現する漢字文字列に関しては再度フォントが定義されます。

●漢字コード

	使える漢字コードはJISかEUCです。半角カナはだめです。

●フォントファイル形式

	dotfont.cで扱っているベタ形式のフォントは、ビットマップデータの
	左上から順に、1文字あたり ((width+7)/8)*height バイトずつベタに
	つめた形式です。MSBが左です。

●漢字フォント名のコンベンション

	ベタ形式のビットマップフォントの場合は名前の後の数字をドットサイズ
	とみなします。例えば"jis24"というのは24ドットフォントとみなされます。

	JTeXのフォントの場合はひとつの漢字フォントがいくつものファイルに
	分散しており、例えば配布されているJIS24ドットフォントは
	jisjkana24.???, jisjka24.???などというファイルに分かれていますが、
	これらは"jisj24"という名前で指定します。

	JTeX以外のフォントについてはフォント名はファイル名から拡張子を除いた
	ものと同じです。
